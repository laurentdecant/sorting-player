{"version":3,"sources":["Visualizer.jsx","algorithms.js","App.jsx","index.js"],"names":["title","values","highlights","className","map","value","index","key","style","background","length","includes","height","width","bubbleSort","array","operations","slice","i","j","push","selectionSort","min","insertionSort","mergeSort","aux","Array","sort","low","high","mid","Math","floor","k","merge","heapSort","sink","a","child","parent","quickSort","pivot","partition","TITLES","random","shuffle","initialize","rootElement","document","getElementById","ReactDOM","render","useState","state","setState","indices","setIndices","speed","setSpeed","useEffect","newIndices","max","canPrevious","some","canNext","timeout","setTimeout","clearTimeout","sign","onClick","Visualizer"],"mappings":"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","file":"static/js/main.216b2185.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default ({ title, values, highlights }) => {\r\n  return (\r\n    <div className=\"visualizer\">\r\n      <h2>{title}</h2>\r\n      <ul>\r\n        {values.map((value, index) => (\r\n          <li\r\n            key={index}\r\n            style={{\r\n              background: `hsl(${value * (360 / values.length)}, 100%, ${\r\n                highlights.includes(index) ? \"100%\" : \"50%\"\r\n              })`,\r\n              height: `${value * (100 / values.length)}%`,\r\n              width: `${100 / values.length}%`\r\n            }}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","const shuffle = length => {\r\n  const array = new Array(length);\r\n  for (let i = 0; i < array.length; i++) {\r\n    array[i] = i + 1;\r\n  }\r\n  for (let i = 0; i < array.length; i++) {\r\n    const j = Math.floor(Math.random() * (array.length - i) + i);\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n\r\n  return array;\r\n};\r\n\r\nconst bubbleSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    for (let j = 0; j < i; j++) {\r\n      operations.push([array.slice(), [j, j + 1]]);\r\n      if (array[j] > array[j + 1]) {\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n        operations.push([array.slice(), [j, j + 1]]);\r\n      }\r\n    }\r\n  }\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nconst selectionSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  for (let i = 0; i < array.length; i++) {\r\n    let min = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      operations.push([array.slice(), [j, min]]);\r\n      if (array[j] < array[min]) {\r\n        min = j;\r\n      }\r\n    }\r\n    [array[i], array[min]] = [array[min], array[i]];\r\n    operations.push([array.slice(), [i, min]]);\r\n  }\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nconst insertionSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  for (let i = 0; i < array.length; i++) {\r\n    for (let j = i; j > 0 && array[j - 1] > array[j]; j--) {\r\n      operations.push([array.slice(), [j - 1, j]]);\r\n      [array[j - 1], array[j]] = [array[j], array[j - 1]];\r\n      operations.push([array.slice(), [j - 1, j]]);\r\n    }\r\n  }\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nconst mergeSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  const aux = new Array(array.length);\r\n  const merge = (low, mid, high) => {\r\n    for (let k = low; k <= high; k += 1) {\r\n      aux[k] = array[k];\r\n      operations.push([array.slice(), [k]]);\r\n    }\r\n    for (let i = low, j = mid + 1, k = low; k <= high; k += 1) {\r\n      if (j > high || (i < mid + 1 && aux[i] < aux[j])) {\r\n        array[k] = aux[i];\r\n        i += 1;\r\n      } else {\r\n        array[k] = aux[j];\r\n        j += 1;\r\n      }\r\n      operations.push([array.slice(), [k]]);\r\n    }\r\n  };\r\n  const sort = (low, high) => {\r\n    if (low < high) {\r\n      const mid = low + Math.floor((high - low) / 2);\r\n      operations.push([array.slice(), [low, mid, high]]);\r\n      sort(low, mid);\r\n      sort(mid + 1, high);\r\n      merge(low, mid, high);\r\n    }\r\n  };\r\n  sort(0, array.length - 1);\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nconst heapSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  const sink = async (index, length) => {\r\n    let parent = index;\r\n    let child = parent * 2 + 1;\r\n    while (\r\n      child <= length &&\r\n      (array[parent] < array[child] || array[parent] < array[child + 1])\r\n    ) {\r\n      operations.push([array.slice(), [parent, child]]);\r\n      if (child < length && array[child] < array[child + 1]) {\r\n        child += 1;\r\n      }\r\n      if (array[parent] < array[child]) {\r\n        [array[parent], array[child]] = [array[child], array[parent]];\r\n        operations.push([array.slice(), [parent, child]]);\r\n      }\r\n      parent = child;\r\n      child = child * 2 + 1;\r\n    }\r\n  };\r\n  const sort = () => {\r\n    for (let i = Math.floor(array.length / 2); i >= 0; i -= 1) {\r\n      operations.push([array.slice(), [i]]);\r\n      sink(i, array.length - 1);\r\n    }\r\n\r\n    for (let i = array.length - 1; i > 0; i -= 1) {\r\n      operations.push([array.slice(), [i]]);\r\n      [array[0], array[i]] = [array[i], array[0]];\r\n      operations.push([array.slice(), [0, i]]);\r\n      sink(0, i - 1);\r\n    }\r\n  };\r\n  sort();\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nconst quickSort = array => {\r\n  const operations = [[array.slice(), []]];\r\n  const partition = (low, high) => {\r\n    let i = low + 1;\r\n    let j = high;\r\n    do {\r\n      operations.push([array.slice(), [i, j]]);\r\n      while (i < high && array[i] < array[low]) {\r\n        operations.push([array.slice(), [i]]);\r\n        i += 1;\r\n      }\r\n      while (j > low && array[j] > array[low]) {\r\n        operations.push([array.slice(), [j]]);\r\n        j -= 1;\r\n      }\r\n      if (i < j) {\r\n        [array[i], array[j]] = [array[j], array[i]];\r\n        operations.push([array.slice(), [i, j]]);\r\n      }\r\n    } while (i < j);\r\n    [array[low], array[j]] = [array[j], array[low]];\r\n    operations.push([array.slice(), [low, j]]);\r\n\r\n    return j;\r\n  };\r\n  const sort = (low, high) => {\r\n    if (low < high) {\r\n      const pivot = partition(low, high);\r\n      operations.push([array.slice(), [low, pivot, high]]);\r\n      sort(low, pivot - 1);\r\n      sort(pivot + 1, high);\r\n    }\r\n  };\r\n  sort(0, array.length - 1);\r\n  operations.push([array.slice(), []]);\r\n\r\n  return operations;\r\n};\r\n\r\nexport {\r\n  shuffle,\r\n  bubbleSort,\r\n  selectionSort,\r\n  insertionSort,\r\n  mergeSort,\r\n  quickSort,\r\n  heapSort\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Visualizer from \"./Visualizer\";\r\nimport {\r\n  shuffle,\r\n  bubbleSort,\r\n  selectionSort,\r\n  insertionSort,\r\n  mergeSort,\r\n  heapSort,\r\n  quickSort\r\n} from \"./algorithms\";\r\n\r\nconst LENGTH = 180;\r\nconst DELAY = 1000 / 60;\r\nconst STOPPED = 0;\r\nconst PLAYING = 1;\r\nconst PAUSED = 2;\r\nconst DEFAULT_SPEED = 1;\r\nconst TITLES = [\"Bubble\", \"Selection\", \"Insertion\", \"Merge\", \"Heap\", \"Quick\"];\r\n\r\nlet operations = [];\r\nconst initialize = () => {\r\n  const array = shuffle(LENGTH);\r\n  operations = [\r\n    bubbleSort(array.slice()),\r\n    selectionSort(array.slice()),\r\n    insertionSort(array.slice()),\r\n    mergeSort(array.slice()),\r\n    heapSort(array.slice()),\r\n    quickSort(array.slice())\r\n  ];\r\n};\r\ninitialize();\r\n\r\nexport default () => {\r\n  const [state, setState] = useState(STOPPED);\r\n  const [indices, setIndices] = useState(operations.map(() => 0));\r\n  const [speed, setSpeed] = useState(DEFAULT_SPEED);\r\n\r\n  useEffect(() => {\r\n    if (state === PLAYING) {\r\n      const newIndices = indices.map((value, index) =>\r\n        Math.min(Math.max(0, value + speed), operations[index].length - 1)\r\n      );\r\n      const canPrevious = newIndices.some(value => value > 0);\r\n      const canNext = newIndices.some(\r\n        (value, index) => value < operations[index].length - 1\r\n      );\r\n      const timeout = setTimeout(() => {\r\n        setIndices(newIndices);\r\n        if ((speed < 0 && !canPrevious) || (speed > 0 && !canNext)) {\r\n          setState(STOPPED);\r\n        }\r\n      }, DELAY);\r\n\r\n      return () => clearTimeout(timeout);\r\n    } else if (state === STOPPED) {\r\n      setSpeed(Math.sign(speed));\r\n    }\r\n  }, [state, indices, speed]);\r\n\r\n  const handleSkipPreviousClick = () => {\r\n    setTimeout(() => {\r\n      setState(STOPPED);\r\n      setIndices(operations.map(() => 0));\r\n    }, DELAY);\r\n  };\r\n\r\n  const handleFastRewindClick = () => {\r\n    setState(PLAYING);\r\n    setSpeed(speed < 0 ? 2 * speed : speed === 1 ? -speed : speed / 2);\r\n  };\r\n\r\n  const handlePlayClick = () => {\r\n    setState(state === PLAYING ? PAUSED : PLAYING);\r\n    setSpeed(DEFAULT_SPEED);\r\n  };\r\n\r\n  const handleFastForwardClick = () => {\r\n    setState(PLAYING);\r\n    setSpeed(speed > 0 ? 2 * speed : speed === -1 ? -speed : speed / 2);\r\n  };\r\n\r\n  const handleSkipNextClick = () => {\r\n    setTimeout(() => {\r\n      setState(STOPPED);\r\n      setIndices(operations.map(value => value.length - 1));\r\n    }, DELAY);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`speed ${state !== PLAYING && \"hidden\"}`}>{speed}X</div>\r\n      <div className=\"controls\">\r\n        <button onClick={handleSkipPreviousClick}>\r\n          <i className=\"material-icons\">skip_previous</i>\r\n        </button>\r\n        <button onClick={handleFastRewindClick}>\r\n          <i className=\"material-icons\">fast_rewind</i>\r\n        </button>\r\n        <button onClick={handlePlayClick}>\r\n          <i className=\"material-icons\">\r\n            {state === PLAYING ? \"pause\" : \"play_arrow\"}\r\n          </i>\r\n        </button>\r\n        <button onClick={handleFastForwardClick}>\r\n          <i className=\"material-icons\">fast_forward</i>\r\n        </button>\r\n        <button onClick={handleSkipNextClick}>\r\n          <i className=\"material-icons\">skip_next</i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"visualizers\">\r\n        {indices.map((value, index) => (\r\n          <Visualizer\r\n            key={index}\r\n            title={TITLES[index]}\r\n            values={operations[index][value][0]}\r\n            highlights={operations[index][value][1]}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles.css\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}